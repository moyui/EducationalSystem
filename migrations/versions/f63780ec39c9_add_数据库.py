"""add 数据库

Revision ID: f63780ec39c9
Revises: 
Create Date: 2019-03-14 23:43:30.549306

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f63780ec39c9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('awardtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('connecttype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('typeid', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursegroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('coursestatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('coursewareinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.Column('typeid', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursewaretype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('creditway',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('way', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('way')
    )
    op.create_table('teacherinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('favor', sa.Float(), nullable=True),
    sa.Column('connect', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'phone')
    )
    op.create_table('usergroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('credit', sa.Integer(), nullable=True),
    sa.Column('rest', sa.Float(), nullable=True),
    sa.Column('income', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'phone')
    )
    op.create_table('chart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('teacherid', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('createDate', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['teacherid'], ['teacherinfo.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('extrainfo', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('tag', sa.Text(), nullable=True),
    sa.Column('teacherid', sa.Integer(), nullable=True),
    sa.Column('buynum', sa.Integer(), nullable=True),
    sa.Column('favour', sa.Float(), nullable=True),
    sa.Column('courselast', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['teacherid'], ['teacherinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursevariety',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('groupid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupid'], ['coursegroup.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('teacherconnect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('typeid', sa.Integer(), nullable=True),
    sa.Column('teacherid', sa.Integer(), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['teacherid'], ['teacherinfo.id'], ),
    sa.ForeignKeyConstraint(['typeid'], ['connecttype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('useraward',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('typeid', sa.Integer(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['typeid'], ['awardtype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usercredit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('wayid', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['wayid'], ['creditway.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userdeposit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseclassify',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('variteyid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.ForeignKeyConstraint(['variteyid'], ['coursevariety.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursecomment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('star', sa.Integer(), nullable=True),
    sa.Column('coursetime', sa.Integer(), nullable=True),
    sa.Column('add', sa.Boolean(), nullable=True),
    sa.Column('addbelongid', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.ForeignKeyConstraint(['status'], ['commentstatus.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursemenu',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coursetime',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('time', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usercollect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userdistribution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('radio', sa.Float(), nullable=True),
    sa.Column('link', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userorder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('courseid', sa.Integer(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.Column('finishdate', sa.String(length=64), nullable=True),
    sa.Column('lasttime', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['courseid'], ['courseinfo.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userdistributiondetail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('distributioniod', sa.Integer(), nullable=True),
    sa.Column('orderid', sa.Integer(), nullable=True),
    sa.Column('income', sa.Float(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['distributioniod'], ['userdistribution.id'], ),
    sa.ForeignKeyConstraint(['orderid'], ['userorder.id'], ),
    sa.ForeignKeyConstraint(['status'], ['coursestatus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userpayment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('orderid', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('createdate', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['orderid'], ['userorder.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userwidthdrawal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('orderid', sa.Integer(), nullable=True),
    sa.Column('money', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['orderid'], ['userorder.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videoinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('totaltime', sa.Integer(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('picurl', sa.Text(), nullable=True),
    sa.Column('menuid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['menuid'], ['coursemenu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userprogress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('videoid', sa.Integer(), nullable=True),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['videoid'], ['videoinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videocomment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('videoid', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['videoid'], ['videoinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videocommentsecond',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('videoid', sa.Integer(), nullable=True),
    sa.Column('commentid', sa.Integer(), nullable=True),
    sa.Column('to', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['commentid'], ['videocomment.id'], ),
    sa.ForeignKeyConstraint(['to'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['userinfo.id'], ),
    sa.ForeignKeyConstraint(['videoid'], ['videoinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('videocommentsecond')
    op.drop_table('videocomment')
    op.drop_table('userprogress')
    op.drop_table('videoinfo')
    op.drop_table('userwidthdrawal')
    op.drop_table('userpayment')
    op.drop_table('userdistributiondetail')
    op.drop_table('userorder')
    op.drop_table('userdistribution')
    op.drop_table('usercollect')
    op.drop_table('coursetime')
    op.drop_table('coursemenu')
    op.drop_table('coursecomment')
    op.drop_table('courseclassify')
    op.drop_table('userdeposit')
    op.drop_table('usercredit')
    op.drop_table('useraward')
    op.drop_table('teacherconnect')
    op.drop_table('coursevariety')
    op.drop_table('courseinfo')
    op.drop_table('chart')
    op.drop_table('userinfo')
    op.drop_table('usergroup')
    op.drop_table('teacherinfo')
    op.drop_table('creditway')
    op.drop_table('coursewaretype')
    op.drop_table('coursewareinfo')
    op.drop_table('coursestatus')
    op.drop_table('coursegroup')
    op.drop_table('coupon')
    op.drop_table('connecttype')
    op.drop_table('commentstatus')
    op.drop_table('awardtype')
    # ### end Alembic commands ###
